query Remotes(
  $where: RemoteSearchConditions!
  $pagination: RemotePaginationOptions!
  $versionsPagination: VersionPaginationOptions!
  $versionOrder: VersionOrder!
) {
  findRemotes(conditions: $where, pagination: $pagination) {
    totalCount
    pageInfo {
      hasNextPage
      hasPreviousPage
    }
    edges {
      versions(pagination: $versionsPagination, order: $versionOrder) {
        edges {
          uid
        }
      }
    }
  }
}

query NormalizedStops(
  $pagination: NormalizedStopPaginationOptions!
  $where: NormalizedStopSearchCondition!
  $options: NormalizedStopSearchOption!
  $stopsOptions: StopSearchOption!
) {
  searchNormalizedStops(pagination: $pagination, conditions: $where, options: $options) {
    totalCount
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
      key
      name
      stops(options: $stopsOptions) {
        edges {
          ... on StopInfo {
            uid
            id
            name
          }
        }
      }
    }
  }
}

query TimetableForBetweenStops($conditions: TimetableSearch!, $pagination: TimetablePaginationOptions!) {
  timetable(conditions: $conditions, pagination: $pagination) {
    totalCount
    pageInfo {
      hasPreviousPage
      hasNextPage
    }
    edges {
... on StopTimeArrivalInfo {
        uid
        headsign
        route {
          uid
          longName
        }
        a_arrival: arrival {
          time
        }
        a_departure: departure {
          time
        }
        remoteVersion {
          remote {
            uid
          }
        }
        stop {
          ... on StopInfo {
            platform {
              code
            }
          }
        }
      }
      ... on StopTimeDepartureInfo {
        uid
        headsign
        route {
          uid
          longName
        }
        d_arrival: arrival {
          time
        }
        d_departure: departure {
          time
        }
        remoteVersion {
          remote {
            uid
          }
        }
        stop {
          ... on StopInfo {
            platform {
              code
            }
          }
        }
      }
      ... on StopTimeInfo {
        uid
        headsign
        route {
          uid
          longName
        }
        arrival {
          time
        }
        departure {
          time
        }
        remoteVersion {
          remote {
            uid
          }
        }
        stop {
          ... on StopInfo {
            platform {
              code
            }
          }
        }
      }
    }
  }
}
